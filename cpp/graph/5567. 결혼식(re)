#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <queue>

using namespace std;

/*
20.06.09.화
bfs를 사용해서 연결된 애들을 찾아줬다.
그래프에서는 bfs를 쓰는 게 맞는듯.
그리고 연결돼있는 애들만 vector에 담아서 쓰는것도
다시해봤다.
*/

int n;//동기의 수
int m;//관계의 수
int check[501];

vector<int> v[501];

void bfs(int n) {
	queue<int> q;
	q.push(n);

	while (!q.empty()) {
		int num = q.front();
		q.pop();

		for (int i = 0; i < v[num].size(); i++) {
			int con = v[num][i];
			if (check[con] == 0) {
				q.push(con);
				check[con] = check[num] + 1;
			}
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	cin >> n;
	cin >> m;
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	check[1] = 1;
	bfs(1);

	int ans = 0;
	for (int i = 1; i <= n; i++) {
		if (check[i] == 2 || check[i] == 3)
			ans++;
	}
	
	cout << ans << '\n';

	return 0;
}
