#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <queue>

using namespace std;

/*
20.06.09.화
6118. 숨바꼭질
결혼식 문제랑 틀이 같고
구하는 게 조금 다른 문제였다.
출발지에서 다른 곳으로 갈 수 있는 최단 거리를 구한 후에
그 중에서 가장 먼 곳을 선택하되
가장 먼 곳이 몇 개가 있는지를 세고
그 중에서 숫자가 가장 작은 것을 기억해두면 된다.
*/

int n;//동기의 수
int m;//관계의 수
int check[20001];

vector<int> v[20001];

void bfs(int n) {
	queue<int> q;
	q.push(n);

	while (!q.empty()) {
		int num = q.front();
		q.pop();

		for (int i = 0; i < v[num].size(); i++) {
			int con = v[num][i];
			if (check[con] == 0) {
				q.push(con);
				check[con] = check[num] + 1;
			}
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	cin >> n;
	cin >> m;
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	check[1] = 1;
	bfs(1);

	int maxVal = 0;
	int cnt = 0;
	int ans;
	for (int i = 1; i <= n; i++) {
		if (check[i] > maxVal) {
			maxVal = check[i];
			cnt = 1;
			ans = i;
		}
		else if (check[i] == maxVal) {
			cnt++;
		}
	}

	cout << ans << " " << maxVal - 1 << " " << cnt << '\n';

	return 0;
}
