#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <queue>

using namespace std;

/*
20.06.09.화
그래프로 다시 풀어봐야겠다.
*/

int n, m;

vector<int> know;

vector<int> party[50];//서로의 친구를 저장.

/*void bfs(int n) {
	queue<int> q;
	q.push(n);

	while (!q.empty()) {
		int num = q.front();
		q.pop();

		for (int i = 0; i < v[num].size(); i++) {
			int con = v[num][i];
			if (check[con] == 0) {
				q.push(con);
				check[con] = check[num] + 1;
			}
		}
	}
}*/

void func(int idx) {
	//idx번째 파티에 있는 모든 사람들을 중복 없이 진실 그룹에 넣는다.

	for (int i = 0; i < party[idx].size(); i++) {
		int check = 0;
		for (int j = 0; j < know.size(); j++) {
			if (know[j] == party[idx][i]) {
				//이미 있다.
				check = 1;
				break;
			}
		}
		if (check == 0) {
			know.push_back(party[idx][i]);
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m;
	int p;
	cin >> p;
	//진실을 아는 사람을 담아둔다.
	for (int i = 0; i < p; i++) {
		int p_;
		cin >> p_;
		know.push_back(p_);
	}

	//m개의 파티에 대해서
	for (int i = 0; i < m; i++) {
		int pcnt;//몇 명 참가하는가
		cin >> pcnt;
		//파티에 참가하는 사람들을 넣어준다.
		for (int j = 0; j < pcnt; j++) {
			int person;
			cin >> person;
			party[i].push_back(person);
		}
	}

	//진실 그룹을 추가해가자
	for (int i = 0; i < m; i++) {
		//m개의 파티에 대해
		int check = 0;
		for (int j = 0; j < party[i].size(); j++) {
			//party[i][j]가 진실을 아는 그룹에 한 명이라도 있으면
			//party[i]에 속한 모든 사람들을 진실 그룹에 넣어야한다. 중복제외 ㅇㅇ
			
			for (int k = 0; k < know.size(); k++) {
				if (party[i][j] == know[k]) {
					//아니 이건 너무 심한 것 같고..
					//for문도 4중으로 돌아야되고 좀 .. 에바입니다.
					//확인하는 것도 거지같아요.
					//그리고 저 for문 자체를 빠져나가야하는데 저기서 못 빠져나가는데 ㅋㅋㅋ

					//한 명이라도 진실 그룹에 있다면
					check = 1;
					break;
				}
			}
		}
		
		if (check == 1) {
			//해당 파티에 진실 그룹이 한 명이라도 있음
			func(i);
		}
	}

	//진실 그룹을 모두 추가했으면 m개의 파티를 돌며
	//구라쳐도 되는지 확인한다.
	//구라쳐도 되는거는..모든 인
	int ans = 0;
	for (int i = 0; i < m; i++) {
		int check = 0;
		for (int j = 0; j < party[i].size(); j++) {
			for (int k = 0; k < know.size(); k++) {
				if (party[i][j] == know[k]) {
					check = 1;
					break;
				}
			}
		}
		if (check == 0)
			ans++;
	}

	cout << "진실그룹" << endl;
	for (int i = 0; i < know.size(); i++)
		cout << know[i] << " ";
	cout << endl;

	cout << ans << '\n';

	return 0;
}
