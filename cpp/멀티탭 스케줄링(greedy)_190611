#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
아예 아 쓰이는 애부터 뺴고,
그런 애가 없으면 가장 멀리 있는 애를 빼서 사용
많이 사용되는 애를 늦게 빼는 게 아니었음.
*/

int n, k;
int arr[101];
int c[101];

void popPlug(int idx)
{
	//뒤에 남은 애들에서 꽂혀 있는 애의 경우 얼마나
	//증가해야되는지
	for (int i = idx + 1; i <= k; i++)
	{
		if (c[arr[i]] == 1)//이미 꽂혀 있다면
		{
			//가장 가까이 있는 것을 찾음.
			c[arr[i]] = i;
			//c[arr[i]] = 1000;
			//값을 더하는 게 아니라 내가 
			//있는 위치를 저장해야 됨.. 맨 처음
			//if(c[arr[i]]>i)
			//	c[arr[i]] = i;
		}
	}

	int max = 0; int pos;
	for (int i = 1; i <= k; i++)
	{
		if (c[i] == 0)
			continue;

		//더이상 안 쓰여서 먼저 없애야 할 애라며
		if (c[i] == 1)
		{
			pos = i;
			break;
		}
		//0이 아닌 애들 중 제일 적게 쓰이는 애 찾기
		if (max < c[i])
		{
			max = c[i];
			pos = i;
		}
		c[i] = 1;
	}
	//제일 적은 그 위치를 뺼 것임.
	c[pos] = 0;
}

int main(void)
{
	int in = 0;
	int ans = 0;
	cin >> n >> k;
	for (int i = 1; i <= k; i++)
	{
		cin >> arr[i];
	}

	for (int i = 1; i <= k; i++)
	{
		if (c[arr[i]] == 0)
		{
			if (in == n)
			{
				//cout << i << "답 증가" << endl;
				popPlug(i);
				ans++;
				in--;
			}
			c[arr[i]] = 1;

			//for (int i = 1; i <= k; i++)
			//	cout << c[i] << " ";
			//cout << endl << endl;
			in++;
		}
	}

	//for (int i = 1; i <= k; i++)
	//	cout << c[i] << " ";

	cout << ans << endl;

	return 0;
}
