#include<cstdio>
#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<stack>

using namespace std;

int root[100][100];
int visited[100];
int n;

void dfs(int node)
{
	stack<int> ds;
	ds.push(node);

	while (ds.size())
	{
		int nnode = ds.top();
		ds.pop();

		for (int i = 0; i < n; i++)
		{
			if (root[nnode][i] == 1 && visited[i] == 0)
			{
				ds.push(i);
				visited[i] = 1;
			}
		}
	}

	for (int i = 0; i < n; i++)
	{
		if (visited[i])
			root[node][i] = 1;
	}
}

int main(){

	cin >> n;

	int a;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin >> root[i][j];
		}
	}

	for (int i = 0; i < n; i++)
		dfs(i);

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cout << root[i][j]<<" ";
		}
		cout << endl;
	}

	return 0;
}
