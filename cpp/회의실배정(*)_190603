#include<cstdio>
#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>

using namespace std;

/*
ㅠ.ㅠ.. 어렵다 어려워. 생각을 해야되는 문제.
탐욕 기법인데 이걸 뭐 어떻게 하라는거야?? 싶어서 결국 또 찾아봄..ㅠ.ㅠ
출처는 : https://kim6394.tistory.com/67
엄청 설명 잘 해주셨음.
*/

struct Confer {
	int start;
	int end;
};

//회의 시간을 정렬할 때 기준
//다양한 경우의 수에 대해 생각해봐야 하고,
//반례가 있는지 판단해봐야 한다.
bool cmp(Confer a, Confer b)
{
	//종료 시간이 같다면 시작 시간이 작은 순으로
	//종료 시간이 다르다면 빨리 종료되는 순으로
	if (a.end == b.end)
		return a.start < b.start;
	else
		return a.end < b.end;
}

int main()
{
	int n;
	cin >> n;

	//회의를 n개 만든다.
	vector<Confer> c(n);

	int s, e;
	//회의 시간을 대입해준다.
	for (int i = 0; i < n; i++)
	{
		cin >> s >> e;
		c[i].start = s;
		c[i].end = e;
	}

	sort(c.begin(), c.end(), cmp);

	int et = 0;
	int cnt = 0;
	for (int i = 0; i < n; i++)
	{
		//다음 회의의 시작 시점이 이전의 마지막 회의와 같거나 크다면,
		if (et <= c[i].start)
		{
			//다음 회의 종료 시간 저장.
			et = c[i].end;
			cnt++;
		}
	}

	cout << cnt;

	return 0;
}
