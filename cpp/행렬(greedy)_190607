#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.06.07.금.
출처: https://jaimemin.tistory.com/728
이걸 어떻게 풀라는 거야! 하고 있었는데
어려운 문제가 아니었을 때의 허망함. ^.^
인덱스 문제는 언제나 주의하자.
*/

int n, m;

int arr1[50][50];
int arr2[50][50];

void flip(int y, int x)
{
	//3*3 행렬을 뒤집는 연산.

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			if (arr1[y+i][x+j] == 0)
				arr1[y+i][x+j] = 1;
			else
				arr1[y+i][x+j] = 0;
		}
	}
}

int main(){
	cin >> n >> m;
	int cnt = 0;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			scanf("%1d", &arr1[i][j]);
		}
	}

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			scanf("%1d", &arr2[i][j]);
		}
	}

	if (n < 3 && m < 3)
	{
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				//하나라도 같지 않으면 못바꾸므로 틀림.
				if (arr1[i][j] != arr2[i][j]) {
					cout << -1;
					return 0;
				}
			}
		}
		//모두 같다면
		cout << 0;
		return 0;
	}
	else//3보다 크거나 같은 경우.
	{
		//모든 경우에 대해서 동일하게 만들기 위해 뒤집어본다.
		for (int i = 0 ; i <= n - 3; i++)
		{
			for (int j = 0; j <= m - 3; j++)
			{
				//두 개가 다르다면 뒤집어준다.
				if (arr1[i][j] != arr2[i][j])
				{
					flip(i, j);
					cnt++;
				}
			}
		}

		//가능한 경우를 다 해 본 후,
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				if (arr1[i][j] != arr2[i][j])
				{
					cout << -1;
					return 0;
				}
			}
		}
		//동일하게 됐으면
		cout << cnt;
	}

	return 0;
}
