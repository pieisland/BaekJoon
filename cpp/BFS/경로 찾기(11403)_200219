#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
방향그래프이기 때문에 a에서 b로 가는 거랑
b에서 a로 가는 게 다르다.
그래서 반드시 check를 2차원 배열로 해줘야한다.
*/

int n;
int map[100][100];
int answer[100][100];
int check[100][100];
vector<int> node[100];

void checkclear() {
	for (int i = 0; i < n; i++)
		for(int j=0;j<n;j++)
			check[i][j] = 0;
}

void bfs(int idx) {
	queue<int> q;
	//check[idx] = 1;
	q.push(idx);

	while (!q.empty()) {
		int now = q.front();
		q.pop();

		for (int i = 0; i < node[now].size(); i++) {
			int idx2 = node[now][i];
			if (check[now][idx2] == 0) {
				check[now][idx2] = 1;
				q.push(idx2);

				//여기서 헷갈렸었는데 지금은 우리가
				//idx라는 애가 누구랑 연결이 되어있는지를 보기 위함이므로
				//idx와 idx2를 연결하는거다.
				answer[idx][idx2] = 1;
			}
		}
	}
}

int main(void){
	
	cin >> n;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> map[i][j];

			//연결돼있음을 표시했어요.
			if (map[i][j] == 1) {
				node[i].push_back(j);
			}
		}
	}

	for (int i = 0; i < n; i++) {
		checkclear();
		bfs(i);
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << answer[i][j] << " ";
		}
		cout << endl;
	}

	return 0;
}
