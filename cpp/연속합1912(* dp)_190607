#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.06.07.금.
출처: https://debuglog.tistory.com/79
뭔가, 되게 담담하게 깔끔히 설명해주심.

아직 dp라는 걸 잘 활용 못하는 것 같다.
ds는 저장을 하고, 점화식을 세워야 돼!
*/

int n;
int dp[100000];//현재 인덱스 까지의 연속합의 최대값을 저장
int arr[100000];

int main(){

	cin >> n;

	for (int i = 0; i < n; i++)
	{
		cin >> arr[i];
	}

	dp[0] = arr[0];
	int ans=-10000;
	for (int i = 1; i < n; i++)
	{
		//이전 dp 값과 현재 값을 더한 값과 현재 값을 비교해 더 큰 값을 dp값으로 지정
		//이전 dp 값이 음수이고 지금 arr 값이 양수이면, arr값이 더 크겠네.
		dp[i] = max(dp[i - 1] + arr[i], arr[i]);
		//방금 구한 dp값이 제일 큰 값은 아닐 수 있잖아.
		ans = max(dp[i], ans);
	}

	ans = max(ans, dp[0]);

	cout << ans;
	return 0;
}
