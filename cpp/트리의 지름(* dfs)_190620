#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.06.20.목.
https://jaimemin.tistory.com/531
아직 이해 못함.
*/

int n;
vector<pair<int, int>> graph[10001];
int c[10001];

int diameter = 0;//지름
int farthestNode = 0; 

void dfs(int node, int cost)
{
	if (c[node]==1)
		return;

	c[node] = 1;
	if (diameter < cost)
	{
		diameter = cost;//지름 큰 값으로 변경.
		farthestNode = node;//제일 먼 노드를 찾음..
	}

	//연결된 모든 노드를 보기?
	for (int i = 0; i < graph[node].size(); i++)
	{
		//그 노드와 연결된 노드와 값을 더한 것을 보내주기.
		dfs(graph[node][i].first, cost + graph[node][i].second);
	}
}

int main(){

	cin >> n;
	int node1, node2, cost;
	for (int i = 1; i < n; i++)
	{
		cin >> node1 >> node2 >> cost;
		graph[node1].push_back(make_pair(node2, cost));
		graph[node2].push_back(make_pair(node1, cost));
	}

	//돌고 나면 제일 먼 노드가 결정이 되나보다.
	dfs(1, 0);
	
	memset(c, 0, sizeof(c));
	diameter = 0;//
	dfs(farthestNode, 0);
	
	cout << diameter << endl;

	return 0;
}
