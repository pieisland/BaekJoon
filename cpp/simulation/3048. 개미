#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <queue>

using namespace std;

/*
20.06.09.화
3048. 개미
vector를 엄청 쓴 문제.
둘이 위치를 바꿔야 할 위치를
저장해서 마지막에 바꿔주면 되는 문제.
*/

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	int n1, n2;
	string s1, s2;
	vector<pair<char, int>> v1; //왼쪽에서 오른쪽으로 가는 개미
	vector<pair<char, int>> v2; //오른쪽에서 왼쪽으로 가는 개미
	vector<pair<char, int>> v; //전체 개미

	cin >> n1 >> n2;
	cin >> s1;
	for (int i = s1.size() - 1; i >= 0; i--) {
		v1.push_back({ s1[i], 1 });
	}
	cin >> s2;
	for (int i = 0; i < s2.size(); i++) {
		v2.push_back({ s2[i], 2 });
	}

	v = v1;
	for (int i = 0; i < v2.size(); i++)
		v.push_back(v2[i]);

	int t;
	cin >> t;
	for (int i = 0; i < t; i++) {
		vector<int> pos;
		for (int j = 0; j < v.size()-1; j++) {
			//위치를 바꿔야하는 곳이라면 기억해둔다.
			if (v[j].second == 1 && v[j + 1].second == 2) {
				pos.push_back(j);
			}
		}

		//기억해둔 장소를 바꾼다.
		for (int j = 0; j < pos.size(); j++) {
			pair<char, int> tmp;
			tmp = v[pos[j]];
			v[pos[j]] = v[pos[j] + 1];
			v[pos[j] + 1] = tmp;
		}
	}

	//출력.
	for (int i = 0; i < v.size(); i++) {
		cout << v[i].first;
	}
	cout << '\n';

	return 0;
}
