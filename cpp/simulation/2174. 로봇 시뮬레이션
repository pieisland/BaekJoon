#include <string>
#include <vector>
#include <iostream>
#include <queue>
#include <algorithm>
#include <cstring>

using namespace std;

/*
20.06.12. 토
2174. 로봇 시뮬레이션
정말 그냥 시뮬레이션 하는 문제.
좌표 보는 게 달라서 그걸 변환하는 게 조금 귀찮은 문제였다.
충돌 발생하는 것도 일일이 따지는 것도 그렇고.
그래도 어려운 문제는 아니었음.
*/

int ground[101][101];
int a, b; //가로 길이 a 세로 길이 b
int n, m; //n개의 로봇에게 m개의 명령을 내린다.
//L방향일 때 오른쪽으로 회전. 그림이랑 다르게 하기 떄문임..
//나는 그 크기 맞춰서 넣는다 귀찮아서
//근데 이게 더 귀찮은 것 같다 그냥 ..... 처음 받는 걸 조금 바꾸는 게 나을지도..
int dir[4][2] = { {0, 1}, {1, 0}, {0, -1}, {-1, 0} };

typedef struct Robot {
	int y;
	int x;
	int d;
} Robot;

Robot robot[101];

bool isinside(int y, int x) {
	if (y >= 1 && y <= b && x >= 1 && x <= a) return true;
	else return false;
}

int checkPosition(int idx) {
	int y = robot[idx].y;
	int x = robot[idx].x;

	//cout << y << " " << x << '\n';
	if (!isinside(y, x)) {
		return -1;//벽과 충돌났다.
	}
	else {
		for (int i = 1; i <= n; i++) {
			if (idx == i) continue;
			int yy = robot[i].y;
			int xx = robot[i].x;
			if (y == yy && x == xx) {
				return i; //다른 애랑 충돌 났다.
			}
		}
	}
	return 0;
}


int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	cin >> a >> b;//가로 세로다. 헷갈리네진짜..
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		int x, y;
		char d;
		cin >> x >> y >> d;
		if (d == 'E') robot[i].d = 0;
		else if (d == 'N') robot[i].d = 1;
		else if (d == 'W') robot[i].d = 2;
		else if (d == 'S') robot[i].d = 3;
		robot[i].x = x;
		robot[i].y = y;
	}

	bool prob = true;
	for (int i = 0; i < m; i++) {
		int bot;
		char order;
		int rot;

		cin >> bot >> order >> rot;
		for (int j = 0; j < rot; j++) {
			if (order == 'F') {
				robot[bot].y += dir[robot[bot].d][0];
				robot[bot].x += dir[robot[bot].d][1];

				int stat = checkPosition(bot);

				if (stat == -1) { //벽과 충돌함.
					cout << "Robot " << bot << " crashes into the wall" << '\n';
					prob = false;
					break;
				}
				else if (stat > 0) { //다른 로봇과 충돌이 남.
					cout << "Robot " << bot << " crashes into robot "<<stat << '\n';
					prob = false;
					break;
				}
			}
			else if (order == 'R') {
				int td = robot[bot].d;
				td--;
				if (td < 0) td = 3;
				robot[bot].d = td;
			}
			else if (order == 'L') {
				int td = robot[bot].d;
				td++;
				if (td >= 4) td = 0;
				robot[bot].d = td;
			}
		}
		if (prob == false) break;
	}
	if (prob) cout << "OK" << '\n';
	
	return 0;
}
