#include <string>
#include <vector>
#include <iostream>
#include <queue>
#include <algorithm>
#include <cstring>

using namespace std;

/*
20.06.11.금
2820. 자동차 공장
시간초과났다.
그리고 분류가 dfs인데 bfs로 풀었음. 그게 또 문제가 될 수도 있지 않을까.
*/

int n, m;
int mymoney[500001];
vector<int> employee[500001];//어떤 부하직원이 있는지 
int check[500001];

void clearCheck() {
	for (int i = 0; i <= 500000; i++) {
		check[i] = 0;
	}
}

void bfs(int a, int b) {
	//a 부하직원의 월급을 증가하자.
	//아 이거 또.. 안 본 애들만 해야되지 않나여 ㅋㅋㅋ
	//이러면 또 메모리 망하지 않음..??
	if (a == 1) {
		for (int i = 2; i <= n; i++)
			mymoney[i] += b;
	}
	else {
		queue<int> q;
		q.push(a);
		check[a] = 1;
		
		while (!q.empty()) {
			int idx = q.front();
			q.pop();

			//모든 부하직원들..
			for (int i = 0; i < employee[idx].size(); i++) {
				int pp = employee[idx][i];

				if (check[pp] == 0) {
					check[pp] = 1;
					mymoney[pp] += b;
					q.push(pp);
				}
			}
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		int mon, man;
		if (i == 1) {
			cin >> mon;
			mymoney[i] = mon;
			//사실 그러면 1번은 모두 다 가지고 있어야 하는 거 아닌가..?
			//딱히 저장하지 말고 그냥 해..?ㅋㅋㅋㅋ
		}
		else {
			cin >> mon >> man;
			mymoney[i] = mon;
			employee[man].push_back(i);
			//최상위만 해야되긴 한데.. ^0^...
			//최상위 어케 찾아 ㅋㅋㅋ
			//그냥 1이면 예외로 해주든가 하자..
			//1이면 2부터 마지막까지 다 증가해주셈.
		}
	}

	//월급 변화
	for (int i = 0; i < m; i++) {
		clearCheck();
		char ch;
		cin >> ch;
		if (ch == 'p') {
			int a, b;
			cin >> a >> b;
			bfs(a, b);
		}
		else {
			int a;
			cin >> a;
			//a 직원의 월급을 출력한다.
			cout << mymoney[a] << '\n';
		}
	}

	return 0;
}
