#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
#include<math.h>
using namespace std;

/*
19.07.05.금.
위상정렬. 어떤 일을 하는 순서를 찾는 알고리즘으로
방향 그래프이며 큐를 사용한다.
진입 차수 개념이 있어 진입 차수를 계산해줘야 하고
진입 차수가 0인 숫자부터 정렬을 시작한다.
그 수를 지우면서 연결된 수들의 진입차수를 1 빼고
모든 수를 계속 정렬해나가면 되는 문제.
*/

int indegree[32001];
vector<int> v[32001];

int main(){

	cin.tie(0);
	int n, m, a, b;
	cin>>n>>m;

	queue<int> q;

	for(int i=0;i<m;i++)
	{
		//연결 상태 입력.
		cin>>a>>b;

		//a에서 b로 가기 떄문에 b는 a에 연결되어 있어서 증가
		indegree[b]++;
		
		//그러면 a에서 b로 향하는 방향그래프 표시
		v[a].push_back(b);
	}

	for(int i=1;i<=n;i++)
	{
		if(indegree[i]==0)//진입차수가 0인 아이.
			q.push(i);
	}

	while(!q.empty())
	{
		int num = q.front();
		q.pop();
		cout<< num <<" ";

		//이제 지우는 애는 num이라는 수이고, 그 num이랑 연결이 된 애는
		//진입 차수가 하나 줄어들게 되는 겁니다.
		for(int i=0;i<v[num].size();i++)
		{
			//얘를 없애는 형태이잖아요.
			//그 해당 숫자의 진입차수가 0이 됐으면 큐에 넣어준다.
			if(--indegree[v[num][i]]==0)
				q.push(v[num][i]);
		}
	}

	return 0;
}
