#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.06.22.토.
양. 너무 전형적인 bfs문제.
*/

int r, c;
char arr[250][250];
int check[250][250];
int dir[4][2] = { {1, 0}, {-1, 0}, {0, 1}, {0, -1} };
int sheep_ans;
int wolf_ans;

bool isInside(int y, int x)
{
	if (y >= 0 && y < r&&x >= 0 && x < c)
		return true;
	else
		return false;
}

void bfs(int y, int x) {
	
	queue<pair<int, int>> q;
	q.push(pair<int, int>(y, x));

	int sheep = 0;
	int wolf = 0;

	while (!q.empty())
	{
		int cy = q.front().first;
		int cx = q.front().second;
		q.pop();

		if (arr[cy][cx] == 'o')
			sheep++;
		if (arr[cy][cx] == 'v')
			wolf++;

		for (int i = 0; i < 4; i++)
		{
			int ny = cy + dir[i][0];
			int nx = cx + dir[i][1];

			if (isInside(ny, nx) && check[ny][nx] == 0 && arr[ny][nx] != '#')
			{
				check[ny][nx] = 1;
				q.push(pair<int, int>(ny, nx));
			}
		}
	}

	if (sheep > wolf)
		wolf = 0;
	else
		sheep = 0;

	//cout << wolf << " "<<sheep << endl;

	wolf_ans += wolf;
	sheep_ans += sheep;
}

int main(){
	
	cin >> r >> c;
	for (int i = 0; i < r; i++)
		for (int j = 0; j < c; j++)
			cin >> arr[i][j];

	for(int i=0;i<r;i++)
		for (int j = 0; j < c; j++)
		{
			if (arr[i][j] != '#' && check[i][j] == 0)
			{
				check[i][j] = 1;
				bfs(i, j);
			}
		}

	cout << sheep_ans << " " << wolf_ans << endl;

	return 0;
}
