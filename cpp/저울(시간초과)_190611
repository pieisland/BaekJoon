#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

//그리디가 뭔지를 이해를 못하니까 못푸는거임.

//int arr[5] = { 1, 2, 3, 4, 5 };
int c[1000];
vector<int> nums;
int arr[1000];

int n;

bool isInside(int number)
{
	for (int i = 0; i < nums.size(); i++)
		if (nums[i] == number)
			return 1;
	return 0;
}

void bfs(int idx, int num, int cnt)
{
	if (num == cnt)
	{
		int sum = 0;
		for (int i = 0; i < n; i++)
			if (c[i] == 1)
				sum += arr[i];
		nums.push_back(sum);
	}
	else
	{
		for (int i = idx+1; i < n; i++)
		{
			if (c[i] == 0)
			{
				c[i] = 1;
				bfs(i, num + 1, cnt);
				c[i] = 0;
			}
		}
	}
}
int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> arr[i];

	for (int k = 1; k <= n; k++) {
		for (int i = 0; i < n; i++)
		{
			if (i + k > n)
				break;

			c[i] = 1;
			bfs(i, 1, k);
			c[i] = 0;
		}
	}
	
	int nn = 1;
	bool check;
	while (1)
	{
		check = isInside(nn);
		if (!check)
		{
			cout << nn << endl;
			break;
		}
		else
			nn++;
	}

	return 0;
}
