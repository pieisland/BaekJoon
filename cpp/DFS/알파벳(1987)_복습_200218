#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
문자를 입력받을 때 cin을 쓰자.
scanf로 하나하나씩 입력받을 떄는 문제가 있다.
아마 마지막에 자동으로 들어가는 그런 것 떄문에 그런 걸로 안다.
*/

int r, c;
char map[20][20];
int check[20][20]; //얘는 이게 필요가 없구나.
int alpha[26]; //알파벳을 건너왔는지 저장.
int dir[4][2] = { {1, 0}, {-1, 0}, {0, 1}, {0, -1} };
int answer = -1;

bool isinside(int y, int x) {
	if (y >= 0 && y < r && x >= 0 && x < c) return true;
	else return false;
}

void dfs(int y, int x, int cnt) {
	//시작할 때 해주면 된다.
	if (answer < cnt) answer = cnt;

	for (int i = 0; i < 4; i++) {
		int ny = y + dir[i][0];
		int nx = x + dir[i][1];
		int now2 = map[ny][nx] - 'A';
		if (isinside(ny, nx)) {
			if (alpha[now2] == 0) {
				alpha[now2] = 1; //백트래킹에서
				dfs(ny, nx, cnt+1);
				alpha[now2] = 0; //제일 중요한 부분.
			}
		}
	}
}

int main()
{
	scanf("%d %d", &r, &c);

	//문자 하나씩 받는 거는 scanf를 사용하면 안된다.
	//이상하게 된다. 그 이유는 뭐지..
	//그래서 cin을 사용하자.
	for (int i = 0; i < r; i++)
		for (int j = 0; j < c; j++)
			cin >> map[i][j];
			//scanf("%c", &map[i][j]);

	//어차피 처음은 다 여기서 한단말이야.
	int a = map[0][0] - 'A';
	alpha[a] = 1;
	dfs(0, 0, 1);

	printf("%d", answer);

	return 0;
}
